% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createFucciTracksWithRepliseq2.R,
%   R/createMtbpPhasesTracksWithRepliseq2.R
\name{createMtbpPhasesTracksWithRepliseq2}
\alias{createMtbpPhasesTracksWithRepliseq2}
\title{Create Genome Track Plot for MTBP Binding Across Cell Cycle Phases with Repli-seq and Peak Density}
\usage{
createMtbpPhasesTracksWithRepliseq2(
  range_to_plot = "chr1:65748366-67420714",
  highlight_regions = list(ranges = c("chr1:65748366-67420714", "chr1:90349536-99016989",
    "chr1:100202878-101572693"), colors = c("blue", "orange", "purple")),
  log2fc_track_parameters = list(G1 = list(txBam = "G1_tx.bam", inBam = "G1_in.bam",
    color = "#114b5F", window_bp = 50000, step_bp = 5000, lg2fc_ylimits = c(-2, 1.5),
    peaks_bed = "peaks.bed"), EarlyS = list(txBam = "EarlyS_tx.bam", inBam =
    "EarlyS_in.bam", color = "#1a936f", window_bp = 50000, step_bp = 5000, lg2fc_ylimits
    = c(-2, 1.5), peaks_bed = "peaks.bed"), LateS = list(txBam = "LateS_tx.bam", inBam =
    "LateS_in.bam", color = "#88d498", window_bp = 50000, step_bp = 5000, lg2fc_ylimits =
    c(-2, 1.5), peaks_bed = "peaks.bed"), 
     G2 = list(txBam = "G2_tx.bam", inBam =
    "G2_in.bam", color = "#cc2936", window_bp = 50000, step_bp = 5000, lg2fc_ylimits =
    c(-2, 1.5), peaks_bed = "peaks.bed")),
  auto_calculate_y_limits = FALSE,
  colors_for_heat_map_function = circlize::colorRamp2(c(0, 5), c("transparent",
    "#3f007d")),
  breaks_for_heat_map = c(0, 1, 2, 3, 4, 5),
  blacklist_bed_path = NULL,
  additional_ggplot_theme = theme(axis.text.y = element_text(color = "black", size = 6,
    hjust = 1), axis.title.y = element_text(color = "black", size = 8, angle = 90, vjust
    = 1), axis.line.y.left = element_line(colour = "black", linewidth = 0.1, linetype =
    "solid"))
)

createMtbpPhasesTracksWithRepliseq2(
  range_to_plot = "chr1:65748366-67420714",
  highlight_regions = list(ranges = c("chr1:65748366-67420714", "chr1:90349536-99016989",
    "chr1:100202878-101572693"), colors = c("blue", "orange", "purple")),
  log2fc_track_parameters = list(G1 = list(txBam = "G1_tx.bam", inBam = "G1_in.bam",
    color = "#114b5F", window_bp = 50000, step_bp = 5000, lg2fc_ylimits = c(-2, 1.5),
    peaks_bed = "peaks.bed"), EarlyS = list(txBam = "EarlyS_tx.bam", inBam =
    "EarlyS_in.bam", color = "#1a936f", window_bp = 50000, step_bp = 5000, lg2fc_ylimits
    = c(-2, 1.5), peaks_bed = "peaks.bed"), LateS = list(txBam = "LateS_tx.bam", inBam =
    "LateS_in.bam", color = "#88d498", window_bp = 50000, step_bp = 5000, lg2fc_ylimits =
    c(-2, 1.5), peaks_bed = "peaks.bed"), 
     G2 = list(txBam = "G2_tx.bam", inBam =
    "G2_in.bam", color = "#cc2936", window_bp = 50000, step_bp = 5000, lg2fc_ylimits =
    c(-2, 1.5), peaks_bed = "peaks.bed")),
  auto_calculate_y_limits = FALSE,
  colors_for_heat_map_function = circlize::colorRamp2(c(0, 5), c("transparent",
    "#3f007d")),
  breaks_for_heat_map = c(0, 1, 2, 3, 4, 5),
  blacklist_bed_path = NULL,
  additional_ggplot_theme = theme(axis.text.y = element_text(color = "black", size = 6,
    hjust = 1), axis.title.y = element_text(color = "black", size = 8, angle = 90, vjust
    = 1), axis.line.y.left = element_line(colour = "black", linewidth = 0.1, linetype =
    "solid"))
)
}
\arguments{
\item{range_to_plot}{UCSC-style genomic coordinates (e.g., \"chr1:65748366-67420714\").}

\item{highlight_regions}{List containing 'ranges' (vector of UCSC strings) and 'colors'.}

\item{log2fc_track_parameters}{Named list specifying parameters for each cell cycle phase.}

\item{auto_calculate_y_limits}{Logical indicating whether Y-axis limits are auto-calculated.}

\item{colors_for_heat_map_function}{Function mapping signals to colors (e.g., colorRamp2).}

\item{breaks_for_heat_map}{Numeric vector defining breaks for the heatmap.}

\item{blacklist_bed_path}{Path to a blacklist BED file (currently unused).}

\item{additional_ggplot_theme}{Additional ggplot theme adjustments.}

\item{highlight_regions_starts}{Numeric vector of start positions for highlighted regions.}

\item{highlight_regions_widths}{Numeric vector of widths for each highlight region.}

\item{highlight_regions_colors}{Character vector of colors for highlight region outlines.}

\item{hightlight_regions_lwd}{Weight of line around highlighted region}

\item{mtbp_paths}{A named list with one entry for each phase ("G1", "EarlyS", "LateS", "G2").
Each entry must be a list with keys: \code{tx} (treatment BAM), \code{input} (control BAM), and \code{peaks} (BED file).}

\item{lg2fc_ylimits}{Numeric vector of two values defining Y-axis limits for log2 fold change tracks.}

\item{repliseq_gr_rds_path}{Path to an RDS file containing a GRanges object for Repli-seq signal.}

\item{ideogram_csv_path}{Path to a CSV file defining ideogram bands (columns: chrom, chromStart, chromEnd, name, gieStain).}

\item{peak_heatplot_bin_size}{Bin size (in bp) to use when converting peak annotations to histogram-style density plots.}

\item{phase_colors}{Named vector of colors for each phase.}

\item{track_sizes}{Named numeric vector specifying the relative heights of tracks in the plot.}

\item{figure_width}{Width of output figure in inches.}

\item{figure_height}{Height of output figure in inches.}

\item{axis_track_scale}{The distance in base pairs between tick marks on the genome axis.}
}
\value{
A captured grid graphics object (using \code{grid.grabExpr}) representing the final genome track plot.

A list with ideogram plot and genome tracks as cowplot objects.
}
\description{
This function generates a genome browser-style figure for a specified genomic region,
visualizing MTBP log2 fold change signals and peak densities from G1, Early S,
Late S, and G2 sorted samples. Repli-seq signal and ideogram tracks are included,
along with shaded highlight regions and optional filtering of blacklisted genomic regions.

This function generates genome browser-style tracks showing MTBP log2 fold change signals
for each cell cycle phase (G1, Early S, Late S, G2), peak density heatmaps, and Repli-seq data.
Ideograms and highlighted genomic regions are overlaid for context.
}
